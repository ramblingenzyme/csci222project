// This file generated by ngrestcg
// For more information, please visit: https://github.com/loentar/ngrest
//

#include <pqxx/pqxx>
#include <cppunit/extensions/HelperMacros.h>
#include "backend.h"
#include "controller.h"

auth_response backend::authenticate(const std::string& username, const std::string& password) {
    //SELECT * FROM USER WHERE USERNAME =$USERNAME - generalising
    user_controller temp;
    auth_response result;

    if (!temp.find_username(username)) {
	result.authed = false;
        result.role = "null";
        result.username = username;

    } else {
	if (temp.authenticate(password)) {
	    result.authed = true;
	    result.role = temp.get_user_info().privilege_level;
	    result.username = username;	
	} else {
            result.authed = false;
            result.role = "null";
       	    result.username = username;
	}
    }

    return result;
}

complete_bug_info backend::get_bug_page(const int& id) {
    Bug_Controller result;

    result.find_bug_id(std::to_string(id));

    return result.get_bug_info();
}

std::list<bug_overview> backend::get_normal_search(const std::string query) {
    std::list<bug_overview> results;
    bug_overview first_result;
    
    DatabaseConnection database;

    std::string sqlQuery = "SELECT BUG_ID FROM BUGS WHERE TITLE LIKE '%"
	    		   + query + "%'";

    pqxx::result r = database.query(sqlQuery);

    for (pqxx::result::const_iterator c = r.begin(); c != r.end(); c++){
	Bug_Controller temp;
	
	temp.find_bug_id(c[0].as<std::string>());
	results.push_back(temp.get_bug_overview()); 
    }

    return results;
}


